?rm
rm(list = ls)
rm(list = ls())
install.packages("rmarkdown")
find.package("devtools")
install.packages("devtools")
find_rtools()
install.packages("devtools")
find_rtools()
find_devtools()
find.package("devtools")
library(devtools)
find_rtools()
library(devtools)
find_rtools()
library(devtools)
find_rtools()
library(devtools)
library(devtools)
find.package("devtools")
library(devtools)
find_rtools()
?Startup
install.packages("KernSmooth")
library(KernSmooth)
find.package("devtools")
find_rtools()
find.package("devtools")
installed.packages("devtools")
find_rtools()
library(devtools)
find_tools()
pkgbuild::find_rtools()
library("pkgbuild", lib.loc="~/R/win-library/3.5")
find_rtools()
#Open the Swirl library
library(swirl)
#Start Swirl
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
#Start Swirl
swirl()
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) < c(4, 5)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
View(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
getwd()
setwd("~/GitHub/Coursera/datasciencecoursera")
add2 <- function(x, y) {
x + y
}
add(2,3)
add2(2,3)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x, 5)
above(x)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
